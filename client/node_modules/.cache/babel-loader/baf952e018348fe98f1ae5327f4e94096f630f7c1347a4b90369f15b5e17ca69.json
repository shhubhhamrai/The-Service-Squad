{"ast":null,"code":"import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { GET_ERRORS, SET_CURRENT_USER, SET_CURRENT_CITY } from \"./types\";\n\n// Register User\n\nexport const registerUser = userData => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(res => dispatch({\n    type: GET_ERRORS,\n    payload: {}\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\n\n// Login - Get User Token\n\nexport const loginUser = userData => dispatch => {\n  axios.post(\"/api/users/login\", userData).then(res => {\n    const {\n      token\n    } = res.data;\n    // save token to localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // Set token to Auth header\n    setAuthToken(token);\n    // decode jwt token\n    const decoded = jwt_decode(token);\n    // set current user\n    dispatch(setCurrentUser(decoded));\n    if (decoded.accountType === \"Customer\") {\n      axios.get(\"/api/customer/customer-profile-data\").then(result => {\n        window.location.replace(\"/dashboard/customer/home\");\n      }).catch(err => {\n        window.location.replace(\"/customer/profile\");\n      });\n    } else if (decoded.accountType === \"Partner\") {\n      axios.get(\"/api/partner/partner-profile-data\").then(result => {\n        window.location.replace(\"/dashboard/partner/home\");\n      }).catch(err => {\n        window.location.replace(\"/partner/profile\");\n      });\n    }\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\n\n// set loggedin user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Logout user\n\nexport const logoutUser = () => dispatch => {\n  // remove token from localStorage\n  localStorage.removeItem(\"jwtToken\");\n  // remove auth header for future request\n  setAuthToken(false);\n  // set current user {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n  window.location.replace(\"/login\");\n};\nexport const getUserCity = () => dispatch => {\n  axios.get(\"/api/users/current-city\").then(result => {\n    dispatch(setCurrentCity(result.data.currentLocation));\n  }).catch(err => console.log(err));\n};\nexport const setCurrentCity = currCity => {\n  if (Array.isArray(currCity) === false) {\n    currCity = [currCity];\n  }\n  return {\n    type: SET_CURRENT_CITY,\n    payload: currCity\n  };\n};","map":{"version":3,"names":["axios","jwt_decode","setAuthToken","GET_ERRORS","SET_CURRENT_USER","SET_CURRENT_CITY","registerUser","userData","dispatch","post","then","res","type","payload","catch","err","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","accountType","get","result","window","location","replace","logoutUser","removeItem","getUserCity","setCurrentCity","currentLocation","console","log","currCity","Array","isArray"],"sources":["D:/Coding file/Project/servicium-au3-master/client/src/redux/actions/authActions.js"],"sourcesContent":["import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { GET_ERRORS, SET_CURRENT_USER, SET_CURRENT_CITY } from \"./types\";\n\n// Register User\n\nexport const registerUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - Get User Token\n\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      // save token to localStorage\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // decode jwt token\n      const decoded = jwt_decode(token);\n      // set current user\n      dispatch(setCurrentUser(decoded));\n      if (decoded.accountType === \"Customer\") {\n        axios\n          .get(\"/api/customer/customer-profile-data\")\n          .then(result => {\n            window.location.replace(\"/dashboard/customer/home\");\n          })\n          .catch(err => {\n            window.location.replace(\"/customer/profile\");\n          });\n      } else if (decoded.accountType === \"Partner\") {\n        axios\n          .get(\"/api/partner/partner-profile-data\")\n          .then(result => {\n            window.location.replace(\"/dashboard/partner/home\");\n          })\n          .catch(err => {\n            window.location.replace(\"/partner/profile\");\n          });\n      }\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// set loggedin user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Logout user\n\nexport const logoutUser = () => dispatch => {\n  // remove token from localStorage\n  localStorage.removeItem(\"jwtToken\");\n  // remove auth header for future request\n  setAuthToken(false);\n  // set current user {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n  window.location.replace(\"/login\");\n};\n\nexport const getUserCity = () => dispatch => {\n  axios\n    .get(\"/api/users/current-city\")\n    .then(result => {\n      dispatch(setCurrentCity(result.data.currentLocation));\n    })\n    .catch(err => console.log(err));\n};\n\nexport const setCurrentCity = currCity => {\n  if (Array.isArray(currCity) === false) {\n    currCity = [currCity];\n  }\n  return {\n    type: SET_CURRENT_CITY,\n    payload: currCity\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}